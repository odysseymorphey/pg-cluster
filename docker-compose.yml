networks:
  pgnet:
    driver: bridge

volumes:
  pgdata1:
  pgdata2:
  pgdata3:
  consul1_data:
  consul2_data:
  consul3_data:

services:
  consul1:
    image: hashicorp/consul:1.21.4
    container_name: consul1
    command: agent -server -bootstrap-expect=3 -datacenter=dc1 -node=consul1 -bind=0.0.0.0 -client=0.0.0.0 -ui
    volumes:
      - consul1_data:/consul/data
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks: [pgnet]

  consul2:
    image: hashicorp/consul:1.21.4
    container_name: consul2
    command: agent -server -datacenter=dc1 -node=consul2 -bind=0.0.0.0 -client=0.0.0.0 -retry-join=consul1
    volumes:
      - consul2_data:/consul/data
    networks: [pgnet]

  consul3:
    image: hashicorp/consul:1.21
    container_name: consul3
    command: agent -server -datacenter=dc1 -node=consul3 -bind=0.0.0.0 -client=0.0.0.0 -retry-join=consul1
    volumes:
      - consul3_data:/consul/data
    networks: [pgnet]

  patroni1:
    image: ongres/patroni:v4.0.4-pg17.2
    container_name: patroni1
    hostname: patroni1
    environment:
      PATRONI_KUBERNETES_USE_CONFIGMAP: "false"
    volumes:
      - ./.conf/patroni1.yml:/etc/patroni/patroni.yml:ro
      - pgdata1:/var/lib/postgresql/data
    ports:
      - "8008:8008"
    depends_on:
      - consul1
      - consul2
      - consul3
    networks: [pgnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  patroni2:
    image: ongres/patroni:v4.0.4-pg17.2
    container_name: patroni2
    hostname: patroni2
    volumes:
      - ./.conf/patroni2.yml:/etc/patroni/patroni.yml:ro
      - pgdata2:/var/lib/postgresql/data
    ports:
      - "8009:8008"
    depends_on:
      - consul1
      - consul2
      - consul3
    networks: [pgnet]
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8008/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  patroni3:
    image: ongres/patroni:v4.0.4-pg17.2
    container_name: patroni3
    hostname: patroni3
    volumes:
      - ./.conf/patroni3.yml:/etc/patroni/patroni.yml:ro
      - pgdata3:/var/lib/postgresql/data
    ports:
      - "8010:8008"
    depends_on:
      - consul1
      - consul2
      - consul3
    networks: [pgnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    depends_on:
      - patroni1
      - patroni2
      - patroni3
    ports:
      - "5000:5000"
      - "5001:5001"
      - "8404:8404"
    volumes:
      - ./.conf/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks: [pgnet]
    restart: unless-stopped